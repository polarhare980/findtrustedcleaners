'use client'; import { useEffect, useState, useCallback } from 'react';
const STORAGE_KEY = 'ftc_theme'; function applyTheme(theme){ const root = document.documentElement; const systemDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches; const isDark = theme==='dark' || (theme==='system' && systemDark); root.classList.toggle('dark', isDark); }
export default function ThemeProvider({ children }) { const [theme, setTheme] = useState('system'); useEffect(()=>{ const stored = localStorage.getItem(STORAGE_KEY) || 'system'; setTheme(stored); applyTheme(stored); const mq = window.matchMedia('(prefers-color-scheme: dark)'); const onChange = ()=>{ if ((localStorage.getItem(STORAGE_KEY) || 'system')==='system') applyTheme('system'); }; if (mq.addEventListener) mq.addEventListener('change', onChange); else mq.addListener(onChange); return ()=>{ if (mq.removeEventListener) mq.removeEventListener('change', onChange); else mq.removeListener(onChange); }; },[]); const update = useCallback((next)=>{ localStorage.setItem(STORAGE_KEY, next); setTheme(next); applyTheme(next); },[]); return (<div data-theme={theme}>{children}</div>); }
export function setTheme(next){ localStorage.setItem(STORAGE_KEY, next); applyTheme(next); }
